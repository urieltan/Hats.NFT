{
  "contractName": "Receiver",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "actual",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "expected",
          "type": "address"
        }
      ],
      "name": "InvalidCrossChainSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotCrossChainCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crossChainRestricted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crossChainOwnerRestricted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"}],\"name\":\"InvalidCrossChainSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCrossChainCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"crossChainOwnerRestricted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossChainRestricted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"owner\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/openzeppelin-contracts-master/contracts/mocks/crosschain/receivers.sol\":\"Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/openzeppelin-contracts-master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38\",\"dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/CrossChainEnabled.sol\":{\"keccak256\":\"0x1ec2f661e2b0bd06b245f7e847111d5b40d32380794bd2d791e89b0bdc3ef082\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9466ccdfd19225a51b9b785e60f22b04220684b8c9f24e11b62b740ad77f761f\",\"dweb:/ipfs/QmUAXfC4rzW9cqVdNkXA5c4HgqxNRwzo2MbUV4wDT52tED\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/amb/CrossChainEnabledAMB.sol\":{\"keccak256\":\"0xf37707f62525c7c0cad85f0d45c35f981bff7a823f9b0b0d91fa499f1e3dbc69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51607afaf47563cac3a65c8bde0a3ae88bbe317ee9d61dd11725c846550329f7\",\"dweb:/ipfs/QmXCNJsecfb3P38RnMNAgoWkRg3rC2q7ht7JuBbPMbpEvG\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/amb/LibAMB.sol\":{\"keccak256\":\"0xb4759c7bd140f662508f815635b403c45e281141e5f197d940e5e1abe5954bde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2108f273dbc32516100f41bea8bc24e0d02a4ea8455b46a6b3814b4cf83161a5\",\"dweb:/ipfs/QmPY2SqejkAsF8G6PahKniUFTjLbG2YiTrgebVE3LXZZBd\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL1.sol\":{\"keccak256\":\"0x05f77d187942df5569ff88deeac13dab72ce9364d26822573d44c7693f7c408c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ae6ac96520415ef45526e734e4615338c8e28a66604db4d8026135922928fe9\",\"dweb:/ipfs/QmbKfJfdMuZrkc6o1vGMN6YtQSJB1cKV5JQheQCAjqwbfU\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol\":{\"keccak256\":\"0x0da62b4c0b2c62ab46b2b06fef102aa16a9741af305c9132faee387c3d56620e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28566707c62707c3844c7c7d72ef8686b89e6fe93521c8d4772dc4c517f74505\",\"dweb:/ipfs/QmNcLYm8vuKtUAfHuqZmeHcYz9HxkRVDhRph9rPUnnegvj\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/LibArbitrumL1.sol\":{\"keccak256\":\"0x364ef776375bac74a5f4f2fd1dc1d4a089915ea0fe720249bb71431e7b2f787f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617a7d7e5be668c840817309f3304f1856d35c56090b8772eeba2bd3f77b279c\",\"dweb:/ipfs/Qmei4Am5cKUx1qyTpFvJ5vo3hFuvtzq5gaz48KUNkETyD6\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/LibArbitrumL2.sol\":{\"keccak256\":\"0xab1259cd9cdb3fccfb8bfae3240954541c3abddcf0f9444b5ebb3393300bb78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d62eef1220cb7bed15e94954a748d592cd06ee2e0d64ef15b1fb8bf660ec931\",\"dweb:/ipfs/QmZLwwmtuBqhZNkoZt1US14KALX3928WpJMR3KfAmiRs5r\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/errors.sol\":{\"keccak256\":\"0xa1e9b651a2427925598b49ef35da5930abc07859cfac5b9dfb1912f063a024b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c514518c36a3fb1c5f1a99d88857e93160c72ea1fd728c443406ad1acb43ae9a\",\"dweb:/ipfs/Qmc3oXjBNhdeM5cfWpsvewXZAhH34Scgna2W3MvLaiiapQ\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/optimism/CrossChainEnabledOptimism.sol\":{\"keccak256\":\"0x474c25c9be599431bed40a89a50985f8e534045c0a9b34d5d883e6e14886f238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2506f212133b44b23beafa5af893e1ba0e0e2ee76db193f22f3163748a659f07\",\"dweb:/ipfs/QmYQPw6yEExEwjShg5udkvQvGw4CqBnfzW5bD5BgEMuQpN\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/optimism/LibOptimism.sol\":{\"keccak256\":\"0x8003c8830d918de3ddda2aa45ecb0e529337befd36f8d2f74961f77d64ec8406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3c0725e69a762665d329ef5a58403d445a54969d84ce9afa0b7ddf968b26b\",\"dweb:/ipfs/QmdsNMRhoSNZa7QFGwLg69Pi596wFoKT2KtowXsDQLwvjT\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/polygon/CrossChainEnabledPolygonChild.sol\":{\"keccak256\":\"0x6434ecbc0dbea24830ed5e60f1f44325238589ad2e58f15efb240367f3527ee7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9173a35a2b1f3df8a2a0da20f7cce8f664e43cba575857fd450d4d4be6332fc\",\"dweb:/ipfs/QmTX8z1LWAdkAhN42jvarg63nACEQhGzQhUAoCNqyyJWGX\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/mocks/crosschain/receivers.sol\":{\"keccak256\":\"0xfe4baebe856fd3fde7d694401bc9de31db0343ee5eae3a71c2374cfc2f6b2b24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d5a33f7e70c7a20e6dc467eb4ef88270c959bf466cdf6fbb3c5b16b781294ec\",\"dweb:/ipfs/QmeyzpFAAnAf7HX9ogjCJj14zvSs75gkQ2EqFxKHyDDMVp\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71\",\"dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/vendor/amb/IAMB.sol\":{\"keccak256\":\"0xffca6c58d7790b4c291ba1ed342a9b180b362b4e7b1639785e9b870a03269134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f8890c34f8ff405625e38f9e42e84719f1d6f7d849cb252c800712d01fd6b2d\",\"dweb:/ipfs/QmSwdcjydNUPewhRqjDABmNThCw6eU9R5x339DWiXc4YdT\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/vendor/arbitrum/IArbSys.sol\":{\"keccak256\":\"0x1026be86fd24e102215070da935b9534d56105ce2ad56664813ad008c9ad6801\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba9f7129d888da72c0320b1dbd0d9ebeff35342638520c98540f46b732f8e41d\",\"dweb:/ipfs/QmVHXHgjxTThuTigx9rjmHfVeiQDZE2ATFBWYdiAvHMucw\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/vendor/arbitrum/IBridge.sol\":{\"keccak256\":\"0x44c94be4cf6547c10824a4c5e3273a0ac1ebf38b1e9493edbdf765fa0ee4d9a3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e4a052a81e31c97fb2a1731e40f950d9fbdf63d71ff74dc9e77957705fc45a70\",\"dweb:/ipfs/QmbpmVHtkxQQatFSohq6xkAfhpgKq3wgVLtTH8hpFP9RMj\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/vendor/arbitrum/IOutbox.sol\":{\"keccak256\":\"0xbefd3211783fd2dcb5e34ef4b1a6221d5ad863d3979a93e629925191137f2bc5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c70d89a337eec28811989f3cc976a13bfd155148edc6c506c8bcf2c3bb4ec2fd\",\"dweb:/ipfs/QmP3SwwgfzsMuQempgWdnzws9Z6GcG75yaoHca7p2efvmd\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/vendor/optimism/ICrossDomainMessenger.sol\":{\"keccak256\":\"0xd8587acce6a8ab0ad475c7731f4efd0d011302b691ea27eadc042d191ed4bd2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39b2255dac0a543c94b7ab87d6c0ffcea70281d6fc060f507df4b9f652d0957e\",\"dweb:/ipfs/QmbYCZgKRPgLMvBjo5ZWsn6jXfKEAudmC1NAxcCCTTik5N\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/vendor/polygon/IFxMessageProcessor.sol\":{\"keccak256\":\"0xcf105ebef706452e452d2f4257a4e08d372c00f7c5026069b01bb0b75cbdf718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://707c0c7f8b1e61d13f08fcb5148975d1ca118f93954afbb7440c4a0dd8bfa90d\",\"dweb:/ipfs/QmSX6QPC6Mt2kyQayYbHMK74NYgLbeTdeSRBQ1MiDDo8c7\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"../../access/Ownable.sol\";\nimport \"../../crosschain/amb/CrossChainEnabledAMB.sol\";\nimport \"../../crosschain/arbitrum/CrossChainEnabledArbitrumL1.sol\";\nimport \"../../crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol\";\nimport \"../../crosschain/optimism/CrossChainEnabledOptimism.sol\";\nimport \"../../crosschain/polygon/CrossChainEnabledPolygonChild.sol\";\n\nabstract contract Receiver is CrossChainEnabled {\n    // we don't use Ownable because it messes up testing for the upgradeable contracts\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address public immutable owner = msg.sender;\n\n    function crossChainRestricted() external onlyCrossChain {}\n\n    function crossChainOwnerRestricted() external onlyCrossChainSender(owner) {}\n}\n\n/**\n * AMB\n */\ncontract CrossChainEnabledAMBMock is Receiver, CrossChainEnabledAMB {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address bridge) CrossChainEnabledAMB(bridge) {}\n}\n\n/**\n * Arbitrum\n */\ncontract CrossChainEnabledArbitrumL1Mock is Receiver, CrossChainEnabledArbitrumL1 {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address bridge) CrossChainEnabledArbitrumL1(bridge) {}\n}\n\ncontract CrossChainEnabledArbitrumL2Mock is Receiver, CrossChainEnabledArbitrumL2 {}\n\n/**\n * Optimism\n */\ncontract CrossChainEnabledOptimismMock is Receiver, CrossChainEnabledOptimism {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address bridge) CrossChainEnabledOptimism(bridge) {}\n}\n\n/**\n * Polygon\n */\ncontract CrossChainEnabledPolygonChildMock is Receiver, CrossChainEnabledPolygonChild {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address bridge) CrossChainEnabledPolygonChild(bridge) {}\n}\n",
  "sourcePath": "/Users/urieltan/gitclones/ft5004/nft-project/contracts/openzeppelin-contracts-master/contracts/mocks/crosschain/receivers.sol",
  "ast": {
    "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/mocks/crosschain/receivers.sol",
    "exportedSymbols": {
      "AMB_Bridge": [
        39822
      ],
      "Address": [
        29787
      ],
      "ArbitrumL1_Bridge": [
        40167
      ],
      "ArbitrumL1_Outbox": [
        40528
      ],
      "ArbitrumL2_Bridge": [
        39968
      ],
      "Context": [
        31553
      ],
      "CrossChainEnabled": [
        1758
      ],
      "CrossChainEnabledAMB": [
        1808
      ],
      "CrossChainEnabledAMBMock": [
        13468
      ],
      "CrossChainEnabledArbitrumL1": [
        1902
      ],
      "CrossChainEnabledArbitrumL1Mock": [
        13484
      ],
      "CrossChainEnabledArbitrumL2": [
        1940
      ],
      "CrossChainEnabledArbitrumL2Mock": [
        13489
      ],
      "CrossChainEnabledOptimism": [
        2112
      ],
      "CrossChainEnabledOptimismMock": [
        13505
      ],
      "CrossChainEnabledPolygonChild": [
        2255
      ],
      "CrossChainEnabledPolygonChildMock": [
        13521
      ],
      "DEFAULT_SENDER": [
        2165
      ],
      "IFxMessageProcessor": [
        40733
      ],
      "InvalidCrossChainSender": [
        2062
      ],
      "LibAMB": [
        1852
      ],
      "LibArbitrumL1": [
        2004
      ],
      "LibArbitrumL2": [
        2052
      ],
      "LibOptimism": [
        2156
      ],
      "NotCrossChainCall": [
        2056
      ],
      "Optimism_Bridge": [
        40721
      ],
      "Ownable": [
        1625
      ],
      "Receiver": [
        13452
      ],
      "ReentrancyGuard": [
        19510
      ]
    },
    "id": 13522,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13425,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:109"
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "id": 13426,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13522,
        "sourceUnit": 1626,
        "src": "58:34:109",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/crosschain/amb/CrossChainEnabledAMB.sol",
        "file": "../../crosschain/amb/CrossChainEnabledAMB.sol",
        "id": 13427,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13522,
        "sourceUnit": 1809,
        "src": "93:55:109",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL1.sol",
        "file": "../../crosschain/arbitrum/CrossChainEnabledArbitrumL1.sol",
        "id": 13428,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13522,
        "sourceUnit": 1903,
        "src": "149:67:109",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
        "file": "../../crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
        "id": 13429,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13522,
        "sourceUnit": 1941,
        "src": "217:67:109",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/crosschain/optimism/CrossChainEnabledOptimism.sol",
        "file": "../../crosschain/optimism/CrossChainEnabledOptimism.sol",
        "id": 13430,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13522,
        "sourceUnit": 2113,
        "src": "285:65:109",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/crosschain/polygon/CrossChainEnabledPolygonChild.sol",
        "file": "../../crosschain/polygon/CrossChainEnabledPolygonChild.sol",
        "id": 13431,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13522,
        "sourceUnit": 2256,
        "src": "351:68:109",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 13432,
              "name": "CrossChainEnabled",
              "nameLocations": [
                "451:17:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1758,
              "src": "451:17:109"
            },
            "id": 13433,
            "nodeType": "InheritanceSpecifier",
            "src": "451:17:109"
          }
        ],
        "canonicalName": "Receiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 13452,
        "linearizedBaseContracts": [
          13452,
          1758
        ],
        "name": "Receiver",
        "nameLocation": "439:8:109",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 13434,
              "nodeType": "StructuredDocumentation",
              "src": "562:87:109",
              "text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
            },
            "functionSelector": "8da5cb5b",
            "id": 13438,
            "mutability": "immutable",
            "name": "owner",
            "nameLocation": "679:5:109",
            "nodeType": "VariableDeclaration",
            "scope": 13452,
            "src": "654:43:109",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13435,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "654:7:109",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 13436,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "687:3:109",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 13437,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberLocation": "691:6:109",
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "687:10:109",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 13443,
              "nodeType": "Block",
              "src": "760:2:109",
              "statements": []
            },
            "functionSelector": "4b074af5",
            "id": 13444,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13441,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13440,
                  "name": "onlyCrossChain",
                  "nameLocations": [
                    "745:14:109"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1724,
                  "src": "745:14:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "745:14:109"
              }
            ],
            "name": "crossChainRestricted",
            "nameLocation": "713:20:109",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:2:109"
            },
            "returnParameters": {
              "id": 13442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "760:0:109"
            },
            "scope": 13452,
            "src": "704:58:109",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 13450,
              "nodeType": "Block",
              "src": "842:2:109",
              "statements": []
            },
            "functionSelector": "f97f5189",
            "id": 13451,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13447,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13438,
                    "src": "835:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 13448,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13446,
                  "name": "onlyCrossChainSender",
                  "nameLocations": [
                    "814:20:109"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1745,
                  "src": "814:20:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "814:27:109"
              }
            ],
            "name": "crossChainOwnerRestricted",
            "nameLocation": "777:25:109",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:2:109"
            },
            "returnParameters": {
              "id": 13449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "842:0:109"
            },
            "scope": 13452,
            "src": "768:76:109",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 13522,
        "src": "421:425:109",
        "usedErrors": [
          2056,
          2062
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13454,
              "name": "Receiver",
              "nameLocations": [
                "900:8:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13452,
              "src": "900:8:109"
            },
            "id": 13455,
            "nodeType": "InheritanceSpecifier",
            "src": "900:8:109"
          },
          {
            "baseName": {
              "id": 13456,
              "name": "CrossChainEnabledAMB",
              "nameLocations": [
                "910:20:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1808,
              "src": "910:20:109"
            },
            "id": 13457,
            "nodeType": "InheritanceSpecifier",
            "src": "910:20:109"
          }
        ],
        "canonicalName": "CrossChainEnabledAMBMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13453,
          "nodeType": "StructuredDocumentation",
          "src": "848:14:109",
          "text": " AMB"
        },
        "fullyImplemented": true,
        "id": 13468,
        "linearizedBaseContracts": [
          13468,
          1808,
          13452,
          1758
        ],
        "name": "CrossChainEnabledAMBMock",
        "nameLocation": "872:24:109",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13466,
              "nodeType": "Block",
              "src": "1047:2:109",
              "statements": []
            },
            "documentation": {
              "id": 13458,
              "nodeType": "StructuredDocumentation",
              "src": "937:48:109",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 13467,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13463,
                    "name": "bridge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13460,
                    "src": "1039:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 13464,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13462,
                  "name": "CrossChainEnabledAMB",
                  "nameLocations": [
                    "1018:20:109"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1808,
                  "src": "1018:20:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "1018:28:109"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13460,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "1010:6:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 13467,
                  "src": "1002:14:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1001:16:109"
            },
            "returnParameters": {
              "id": 13465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1047:0:109"
            },
            "scope": 13468,
            "src": "990:59:109",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13522,
        "src": "863:188:109",
        "usedErrors": [
          2056,
          2062
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13470,
              "name": "Receiver",
              "nameLocations": [
                "1117:8:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13452,
              "src": "1117:8:109"
            },
            "id": 13471,
            "nodeType": "InheritanceSpecifier",
            "src": "1117:8:109"
          },
          {
            "baseName": {
              "id": 13472,
              "name": "CrossChainEnabledArbitrumL1",
              "nameLocations": [
                "1127:27:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1902,
              "src": "1127:27:109"
            },
            "id": 13473,
            "nodeType": "InheritanceSpecifier",
            "src": "1127:27:109"
          }
        ],
        "canonicalName": "CrossChainEnabledArbitrumL1Mock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13469,
          "nodeType": "StructuredDocumentation",
          "src": "1053:19:109",
          "text": " Arbitrum"
        },
        "fullyImplemented": true,
        "id": 13484,
        "linearizedBaseContracts": [
          13484,
          1902,
          13452,
          1758
        ],
        "name": "CrossChainEnabledArbitrumL1Mock",
        "nameLocation": "1082:31:109",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13482,
              "nodeType": "Block",
              "src": "1278:2:109",
              "statements": []
            },
            "documentation": {
              "id": 13474,
              "nodeType": "StructuredDocumentation",
              "src": "1161:48:109",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 13483,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13479,
                    "name": "bridge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13476,
                    "src": "1270:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 13480,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13478,
                  "name": "CrossChainEnabledArbitrumL1",
                  "nameLocations": [
                    "1242:27:109"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1902,
                  "src": "1242:27:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "1242:35:109"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13476,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "1234:6:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 13483,
                  "src": "1226:14:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1225:16:109"
            },
            "returnParameters": {
              "id": 13481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1278:0:109"
            },
            "scope": 13484,
            "src": "1214:66:109",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13522,
        "src": "1073:209:109",
        "usedErrors": [
          2056,
          2062
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13485,
              "name": "Receiver",
              "nameLocations": [
                "1328:8:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13452,
              "src": "1328:8:109"
            },
            "id": 13486,
            "nodeType": "InheritanceSpecifier",
            "src": "1328:8:109"
          },
          {
            "baseName": {
              "id": 13487,
              "name": "CrossChainEnabledArbitrumL2",
              "nameLocations": [
                "1338:27:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1940,
              "src": "1338:27:109"
            },
            "id": 13488,
            "nodeType": "InheritanceSpecifier",
            "src": "1338:27:109"
          }
        ],
        "canonicalName": "CrossChainEnabledArbitrumL2Mock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13489,
        "linearizedBaseContracts": [
          13489,
          1940,
          13452,
          1758
        ],
        "name": "CrossChainEnabledArbitrumL2Mock",
        "nameLocation": "1293:31:109",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 13522,
        "src": "1284:84:109",
        "usedErrors": [
          2056,
          2062
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13491,
              "name": "Receiver",
              "nameLocations": [
                "1432:8:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13452,
              "src": "1432:8:109"
            },
            "id": 13492,
            "nodeType": "InheritanceSpecifier",
            "src": "1432:8:109"
          },
          {
            "baseName": {
              "id": 13493,
              "name": "CrossChainEnabledOptimism",
              "nameLocations": [
                "1442:25:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2112,
              "src": "1442:25:109"
            },
            "id": 13494,
            "nodeType": "InheritanceSpecifier",
            "src": "1442:25:109"
          }
        ],
        "canonicalName": "CrossChainEnabledOptimismMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13490,
          "nodeType": "StructuredDocumentation",
          "src": "1370:19:109",
          "text": " Optimism"
        },
        "fullyImplemented": true,
        "id": 13505,
        "linearizedBaseContracts": [
          13505,
          2112,
          13452,
          1758
        ],
        "name": "CrossChainEnabledOptimismMock",
        "nameLocation": "1399:29:109",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13503,
              "nodeType": "Block",
              "src": "1589:2:109",
              "statements": []
            },
            "documentation": {
              "id": 13495,
              "nodeType": "StructuredDocumentation",
              "src": "1474:48:109",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 13504,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13500,
                    "name": "bridge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13497,
                    "src": "1581:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 13501,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13499,
                  "name": "CrossChainEnabledOptimism",
                  "nameLocations": [
                    "1555:25:109"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2112,
                  "src": "1555:25:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "1555:33:109"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13497,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "1547:6:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 13504,
                  "src": "1539:14:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1538:16:109"
            },
            "returnParameters": {
              "id": 13502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1589:0:109"
            },
            "scope": 13505,
            "src": "1527:64:109",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13522,
        "src": "1390:203:109",
        "usedErrors": [
          2056,
          2062
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13507,
              "name": "Receiver",
              "nameLocations": [
                "1660:8:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13452,
              "src": "1660:8:109"
            },
            "id": 13508,
            "nodeType": "InheritanceSpecifier",
            "src": "1660:8:109"
          },
          {
            "baseName": {
              "id": 13509,
              "name": "CrossChainEnabledPolygonChild",
              "nameLocations": [
                "1670:29:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2255,
              "src": "1670:29:109"
            },
            "id": 13510,
            "nodeType": "InheritanceSpecifier",
            "src": "1670:29:109"
          }
        ],
        "canonicalName": "CrossChainEnabledPolygonChildMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13506,
          "nodeType": "StructuredDocumentation",
          "src": "1595:18:109",
          "text": " Polygon"
        },
        "fullyImplemented": true,
        "id": 13521,
        "linearizedBaseContracts": [
          13521,
          2255,
          19510,
          13452,
          1758,
          40733
        ],
        "name": "CrossChainEnabledPolygonChildMock",
        "nameLocation": "1623:33:109",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13519,
              "nodeType": "Block",
              "src": "1825:2:109",
              "statements": []
            },
            "documentation": {
              "id": 13511,
              "nodeType": "StructuredDocumentation",
              "src": "1706:48:109",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 13520,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13516,
                    "name": "bridge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13513,
                    "src": "1817:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 13517,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13515,
                  "name": "CrossChainEnabledPolygonChild",
                  "nameLocations": [
                    "1787:29:109"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2255,
                  "src": "1787:29:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "1787:37:109"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13513,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "1779:6:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 13520,
                  "src": "1771:14:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1770:16:109"
            },
            "returnParameters": {
              "id": 13518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:0:109"
            },
            "scope": 13521,
            "src": "1759:68:109",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13522,
        "src": "1614:215:109",
        "usedErrors": [
          2056,
          2062
        ]
      }
    ],
    "src": "33:1797:109"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-18T20:14:33.702Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "owner": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}