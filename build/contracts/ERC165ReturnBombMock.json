{
  "contractName": "ERC165ReturnBombMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/openzeppelin-contracts-master/contracts/mocks/ERC165/ERC165ReturnBomb.sol\":\"ERC165ReturnBombMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/openzeppelin-contracts-master/contracts/mocks/ERC165/ERC165ReturnBomb.sol\":{\"keccak256\":\"0xf8d78ad9eb0a551f45f15cfb56cf1cb7c77f906e305a63b55300e055d31622b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c439959a408f1c40989e6b565bf931d3c9320d093bb67e5f7c5f89abafbb56df\",\"dweb:/ipfs/QmbDoyfqvaHZYCf7w7neyVSNKgaywrL6SsCV8HUC6Wxfhb\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101cb806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806301ffc9a714610030575b600080fd5b61004a60048036038101906100459190610132565b610060565b604051610057919061017a565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036100cd5760016000525b62018c7c6000f35b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61010f816100da565b811461011a57600080fd5b50565b60008135905061012c81610106565b92915050565b600060208284031215610148576101476100d5565b5b60006101568482850161011d565b91505092915050565b60008115159050919050565b6101748161015f565b82525050565b600060208201905061018f600083018461016b565b9291505056fea2646970667358221220e9977b345aadb1c3bc35fa0b1eb3466a29016623e4a3756aee411f2b07b5866a64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806301ffc9a714610030575b600080fd5b61004a60048036038101906100459190610132565b610060565b604051610057919061017a565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036100cd5760016000525b62018c7c6000f35b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61010f816100da565b811461011a57600080fd5b50565b60008135905061012c81610106565b92915050565b600060208284031215610148576101476100d5565b5b60006101568482850161011d565b91505092915050565b60008115159050919050565b6101748161015f565b82525050565b600060208201905061018f600083018461016b565b9291505056fea2646970667358221220e9977b345aadb1c3bc35fa0b1eb3466a29016623e4a3756aee411f2b07b5866a64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1515:258",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:258",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:258",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:258",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:258"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:258"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:258",
                "type": ""
              }
            ],
            "src": "7:75:258"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:258",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:258",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:258",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:258"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:258"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:258"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:258",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:258",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:258",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:258"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:258"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:258"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "378:105:258",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "388:89:258",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "403:5:258"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "410:66:258",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "399:3:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:78:258"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "388:7:258"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "360:5:258",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "370:7:258",
                "type": ""
              }
            ],
            "src": "334:149:258"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:78:258",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "587:16:258",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "596:1:258",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "599:1:258",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "589:6:258"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "589:12:258"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "589:12:258"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "554:5:258"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "578:5:258"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "561:16:258"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "561:23:258"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "551:2:258"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "551:34:258"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "544:6:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:42:258"
                  },
                  "nodeType": "YulIf",
                  "src": "541:62:258"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "524:5:258",
                "type": ""
              }
            ],
            "src": "489:120:258"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "666:86:258",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "676:29:258",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "698:6:258"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "685:12:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "685:20:258"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "676:5:258"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "740:5:258"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "714:25:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "714:32:258"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "714:32:258"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:258",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "652:3:258",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "660:5:258",
                "type": ""
              }
            ],
            "src": "615:137:258"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "823:262:258",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:83:258",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "871:77:258"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:79:258"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:79:258"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "844:7:258"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "853:9:258"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "840:3:258"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "840:23:258"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "865:2:258",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "836:3:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:32:258"
                  },
                  "nodeType": "YulIf",
                  "src": "833:119:258"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "962:116:258",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "977:15:258",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "991:1:258",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "981:6:258",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1006:62:258",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1040:9:258"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1051:6:258"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1036:3:258"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1036:22:258"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1060:7:258"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "1016:19:258"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1016:52:258"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1006:6:258"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "793:9:258",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "804:7:258",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "816:6:258",
                "type": ""
              }
            ],
            "src": "758:327:258"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1133:48:258",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1143:32:258",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1168:5:258"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1161:6:258"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:13:258"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1154:21:258"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1143:7:258"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1115:5:258",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1125:7:258",
                "type": ""
              }
            ],
            "src": "1091:90:258"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1246:50:258",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1263:3:258"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1283:5:258"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1268:14:258"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:21:258"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1256:6:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:34:258"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1256:34:258"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1234:5:258",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1241:3:258",
                "type": ""
              }
            ],
            "src": "1187:109:258"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1394:118:258",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1404:26:258",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1416:9:258"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1427:2:258",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1412:3:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1412:18:258"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1404:4:258"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1478:6:258"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1491:9:258"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1502:1:258",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1487:3:258"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1487:17:258"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1440:37:258"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:65:258"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1440:65:258"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1366:9:258",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1378:6:258",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1389:4:258",
                "type": ""
              }
            ],
            "src": "1302:210:258"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 258,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "107:330:87:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "107:330:87:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;154:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;231:4;266:25;251:40;;;:11;:40;;;;247:123;;344:1;341;334:12;247:123;412:6;409:1;402:17;88:117:258;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\ncontract ERC165ReturnBombMock is IERC165 {\n    function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {\n        if (interfaceId == type(IERC165).interfaceId) {\n            assembly {\n                mstore(0, 1)\n            }\n        }\n        assembly {\n            return(0, 101500)\n        }\n    }\n}\n",
  "sourcePath": "/Users/urieltan/gitclones/ft5004/nft-project/contracts/openzeppelin-contracts-master/contracts/mocks/ERC165/ERC165ReturnBomb.sol",
  "ast": {
    "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/mocks/ERC165/ERC165ReturnBomb.sol",
    "exportedSymbols": {
      "ERC165ReturnBombMock": [
        10700
      ],
      "IERC165": [
        34360
      ]
    },
    "id": 10701,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10677,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:87"
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/utils/introspection/IERC165.sol",
        "file": "../../utils/introspection/IERC165.sol",
        "id": 10678,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10701,
        "sourceUnit": 34361,
        "src": "58:47:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10679,
              "name": "IERC165",
              "nameLocations": [
                "140:7:87"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34360,
              "src": "140:7:87"
            },
            "id": 10680,
            "nodeType": "InheritanceSpecifier",
            "src": "140:7:87"
          }
        ],
        "canonicalName": "ERC165ReturnBombMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10700,
        "linearizedBaseContracts": [
          10700,
          34360
        ],
        "name": "ERC165ReturnBombMock",
        "nameLocation": "116:20:87",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              34359
            ],
            "body": {
              "id": 10698,
              "nodeType": "Block",
              "src": "237:198:87",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 10693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10688,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10682,
                      "src": "251:11:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 10690,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34360,
                            "src": "271:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$34360_$",
                              "typeString": "type(contract IERC165)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$34360_$",
                              "typeString": "type(contract IERC165)"
                            }
                          ],
                          "id": 10689,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "266:4:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 10691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "266:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$34360",
                          "typeString": "type(contract IERC165)"
                        }
                      },
                      "id": 10692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "280:11:87",
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "266:25:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "251:40:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10696,
                  "nodeType": "IfStatement",
                  "src": "247:123:87",
                  "trueBody": {
                    "id": 10695,
                    "nodeType": "Block",
                    "src": "293:77:87",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "316:44:87",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "341:1:87",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "344:1:87",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "334:6:87"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "334:12:87"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "334:12:87"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [],
                        "id": 10694,
                        "nodeType": "InlineAssembly",
                        "src": "307:53:87"
                      }
                    ]
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "388:41:87",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "409:1:87",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "412:6:87",
                              "type": "",
                              "value": "101500"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "402:6:87"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "402:17:87"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "402:17:87"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [],
                  "id": 10697,
                  "nodeType": "InlineAssembly",
                  "src": "379:50:87"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 10699,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "163:17:87",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10684,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "213:8:87"
            },
            "parameters": {
              "id": 10683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10682,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "188:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 10699,
                  "src": "181:18:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 10681,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "181:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "180:20:87"
            },
            "returnParameters": {
              "id": 10687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10686,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10699,
                  "src": "231:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10685,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "231:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "230:6:87"
            },
            "scope": 10700,
            "src": "154:281:87",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10701,
        "src": "107:330:87",
        "usedErrors": []
      }
    ],
    "src": "33:405:87"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-18T20:14:33.634Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}