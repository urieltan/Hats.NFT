{
  "contractName": "CrossChainEnabledArbitrumL2",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://arbitrum.io/[Arbitrum] specialization or the {CrossChainEnabled} abstraction the L2 side (arbitrum). This version should only be deployed on L2 to process cross-chain messages originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}. Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore, this specialization of {CrossChainEnabled} does not include a constructor. _Available since v4.6._ WARNING: There is currently a bug in Arbitrum that causes this contract to fail to detect cross-chain calls when deployed behind a proxy. This will be fixed when the network is upgraded to Arbitrum Nitro, currently scheduled for August 31st 2022.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol\":\"CrossChainEnabledArbitrumL2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/CrossChainEnabled.sol\":{\"keccak256\":\"0x1ec2f661e2b0bd06b245f7e847111d5b40d32380794bd2d791e89b0bdc3ef082\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9466ccdfd19225a51b9b785e60f22b04220684b8c9f24e11b62b740ad77f761f\",\"dweb:/ipfs/QmUAXfC4rzW9cqVdNkXA5c4HgqxNRwzo2MbUV4wDT52tED\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol\":{\"keccak256\":\"0x0da62b4c0b2c62ab46b2b06fef102aa16a9741af305c9132faee387c3d56620e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28566707c62707c3844c7c7d72ef8686b89e6fe93521c8d4772dc4c517f74505\",\"dweb:/ipfs/QmNcLYm8vuKtUAfHuqZmeHcYz9HxkRVDhRph9rPUnnegvj\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/LibArbitrumL2.sol\":{\"keccak256\":\"0xab1259cd9cdb3fccfb8bfae3240954541c3abddcf0f9444b5ebb3393300bb78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d62eef1220cb7bed15e94954a748d592cd06ee2e0d64ef15b1fb8bf660ec931\",\"dweb:/ipfs/QmZLwwmtuBqhZNkoZt1US14KALX3928WpJMR3KfAmiRs5r\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/crosschain/errors.sol\":{\"keccak256\":\"0xa1e9b651a2427925598b49ef35da5930abc07859cfac5b9dfb1912f063a024b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c514518c36a3fb1c5f1a99d88857e93160c72ea1fd728c443406ad1acb43ae9a\",\"dweb:/ipfs/Qmc3oXjBNhdeM5cfWpsvewXZAhH34Scgna2W3MvLaiiapQ\"]},\"project:/contracts/openzeppelin-contracts-master/contracts/vendor/arbitrum/IArbSys.sol\":{\"keccak256\":\"0x1026be86fd24e102215070da935b9534d56105ce2ad56664813ad008c9ad6801\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba9f7129d888da72c0320b1dbd0d9ebeff35342638520c98540f46b732f8e41d\",\"dweb:/ipfs/QmVHXHgjxTThuTigx9rjmHfVeiQDZE2ATFBWYdiAvHMucw\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol)\n\npragma solidity ^0.8.4;\n\nimport \"../CrossChainEnabled.sol\";\nimport \"./LibArbitrumL2.sol\";\n\n/**\n * @dev https://arbitrum.io/[Arbitrum] specialization or the\n * {CrossChainEnabled} abstraction the L2 side (arbitrum).\n *\n * This version should only be deployed on L2 to process cross-chain messages\n * originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}.\n *\n * Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore,\n * this specialization of {CrossChainEnabled} does not include a constructor.\n *\n * _Available since v4.6._\n *\n * WARNING: There is currently a bug in Arbitrum that causes this contract to\n * fail to detect cross-chain calls when deployed behind a proxy. This will be\n * fixed when the network is upgraded to Arbitrum Nitro, currently scheduled for\n * August 31st 2022.\n */\nabstract contract CrossChainEnabledArbitrumL2 is CrossChainEnabled {\n    /**\n     * @dev see {CrossChainEnabled-_isCrossChain}\n     */\n    function _isCrossChain() internal view virtual override returns (bool) {\n        return LibArbitrumL2.isCrossChain(LibArbitrumL2.ARBSYS);\n    }\n\n    /**\n     * @dev see {CrossChainEnabled-_crossChainSender}\n     */\n    function _crossChainSender() internal view virtual override onlyCrossChain returns (address) {\n        return LibArbitrumL2.crossChainSender(LibArbitrumL2.ARBSYS);\n    }\n}\n",
  "sourcePath": "/Users/urieltan/gitclones/ft5004/nft-project/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
  "ast": {
    "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
    "exportedSymbols": {
      "ArbitrumL2_Bridge": [
        39968
      ],
      "CrossChainEnabled": [
        1758
      ],
      "CrossChainEnabledArbitrumL2": [
        1940
      ],
      "InvalidCrossChainSender": [
        2062
      ],
      "LibArbitrumL2": [
        2052
      ],
      "NotCrossChainCall": [
        2056
      ]
    },
    "id": 1941,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1904,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "135:23:14"
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/crosschain/CrossChainEnabled.sol",
        "file": "../CrossChainEnabled.sol",
        "id": 1905,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1941,
        "sourceUnit": 1759,
        "src": "160:34:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-contracts-master/contracts/crosschain/arbitrum/LibArbitrumL2.sol",
        "file": "./LibArbitrumL2.sol",
        "id": 1906,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1941,
        "sourceUnit": 2053,
        "src": "195:29:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1908,
              "name": "CrossChainEnabled",
              "nameLocations": [
                "1013:17:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1758,
              "src": "1013:17:14"
            },
            "id": 1909,
            "nodeType": "InheritanceSpecifier",
            "src": "1013:17:14"
          }
        ],
        "canonicalName": "CrossChainEnabledArbitrumL2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1907,
          "nodeType": "StructuredDocumentation",
          "src": "226:737:14",
          "text": " @dev https://arbitrum.io/[Arbitrum] specialization or the\n {CrossChainEnabled} abstraction the L2 side (arbitrum).\n This version should only be deployed on L2 to process cross-chain messages\n originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}.\n Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore,\n this specialization of {CrossChainEnabled} does not include a constructor.\n _Available since v4.6._\n WARNING: There is currently a bug in Arbitrum that causes this contract to\n fail to detect cross-chain calls when deployed behind a proxy. This will be\n fixed when the network is upgraded to Arbitrum Nitro, currently scheduled for\n August 31st 2022."
        },
        "fullyImplemented": true,
        "id": 1940,
        "linearizedBaseContracts": [
          1940,
          1758
        ],
        "name": "CrossChainEnabledArbitrumL2",
        "nameLocation": "982:27:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1751
            ],
            "body": {
              "id": 1922,
              "nodeType": "Block",
              "src": "1174:72:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1918,
                          "name": "LibArbitrumL2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2052,
                          "src": "1218:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$2052_$",
                            "typeString": "type(library LibArbitrumL2)"
                          }
                        },
                        "id": 1919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1232:6:14",
                        "memberName": "ARBSYS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2014,
                        "src": "1218:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1916,
                        "name": "LibArbitrumL2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2052,
                        "src": "1191:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$2052_$",
                          "typeString": "type(library LibArbitrumL2)"
                        }
                      },
                      "id": 1917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1205:12:14",
                      "memberName": "isCrossChain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2028,
                      "src": "1191:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1191:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1915,
                  "id": 1921,
                  "nodeType": "Return",
                  "src": "1184:55:14"
                }
              ]
            },
            "documentation": {
              "id": 1910,
              "nodeType": "StructuredDocumentation",
              "src": "1037:61:14",
              "text": " @dev see {CrossChainEnabled-_isCrossChain}"
            },
            "id": 1923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isCrossChain",
            "nameLocation": "1112:13:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1912,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1150:8:14"
            },
            "parameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1125:2:14"
            },
            "returnParameters": {
              "id": 1915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1923,
                  "src": "1168:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1913,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1167:6:14"
            },
            "scope": 1940,
            "src": "1103:143:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1757
            ],
            "body": {
              "id": 1938,
              "nodeType": "Block",
              "src": "1415:76:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1934,
                          "name": "LibArbitrumL2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2052,
                          "src": "1463:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$2052_$",
                            "typeString": "type(library LibArbitrumL2)"
                          }
                        },
                        "id": 1935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1477:6:14",
                        "memberName": "ARBSYS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2014,
                        "src": "1463:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1932,
                        "name": "LibArbitrumL2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2052,
                        "src": "1432:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$2052_$",
                          "typeString": "type(library LibArbitrumL2)"
                        }
                      },
                      "id": 1933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1446:16:14",
                      "memberName": "crossChainSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2051,
                      "src": "1432:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view returns (address)"
                      }
                    },
                    "id": 1936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1432:52:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1931,
                  "id": 1937,
                  "nodeType": "Return",
                  "src": "1425:59:14"
                }
              ]
            },
            "documentation": {
              "id": 1924,
              "nodeType": "StructuredDocumentation",
              "src": "1252:65:14",
              "text": " @dev see {CrossChainEnabled-_crossChainSender}"
            },
            "id": 1939,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1928,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1927,
                  "name": "onlyCrossChain",
                  "nameLocations": [
                    "1382:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1724,
                  "src": "1382:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "1382:14:14"
              }
            ],
            "name": "_crossChainSender",
            "nameLocation": "1331:17:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1926,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1373:8:14"
            },
            "parameters": {
              "id": 1925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1348:2:14"
            },
            "returnParameters": {
              "id": 1931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1930,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1939,
                  "src": "1406:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1405:9:14"
            },
            "scope": 1940,
            "src": "1322:169:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1941,
        "src": "964:529:14",
        "usedErrors": []
      }
    ],
    "src": "135:1359:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-18T20:14:33.564Z",
  "devdoc": {
    "details": "https://arbitrum.io/[Arbitrum] specialization or the {CrossChainEnabled} abstraction the L2 side (arbitrum). This version should only be deployed on L2 to process cross-chain messages originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}. Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore, this specialization of {CrossChainEnabled} does not include a constructor. _Available since v4.6._ WARNING: There is currently a bug in Arbitrum that causes this contract to fail to detect cross-chain calls when deployed behind a proxy. This will be fixed when the network is upgraded to Arbitrum Nitro, currently scheduled for August 31st 2022.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}